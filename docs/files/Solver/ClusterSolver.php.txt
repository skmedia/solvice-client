<?php

namespace Solvice\Solver;

use Doctrine\Common\Collections\ArrayCollection;
use Solvice\Collection\ClusterCollection;
use Solvice\Collection\EntityCollection;
use Solvice\Entity\Cluster;
use Solvice\Entity\Entity;

/**
 * Class ClusterSolver
 *
 * @package Solvice\Solver
 */
class ClusterSolver extends Solver
{
    /**
     * @var ClusterCollection
     */
    private $clusters;

    /**
     * @var EntityCollection
     */
    private $entities;

    /**
     * ClusterSolver constructor.
     *
     * @param ClusterCollection|null $clusters
     * @param EntityCollection|null  $entities
     */
    public function __construct(
        ClusterCollection $clusters = null,
        EntityCollection $entities = null
    ) {
        $this->solver = Solver::CLUST;

        $this->clusters = $clusters ?: new ClusterCollection();
        $this->entities = $entities ?: new EntityCollection();
    }

    /**
     * @param $solver
     *
     * @return static
     */
    public static function fromArray($solver)
    {
        return new static(
            ClusterCollection::fromArray($solver['clusters']),
            EntityCollection::fromArray($solver['entities'])
        );
    }

    /**
     * @return ArrayCollection
     */
    public function getClusters()
    {
        return $this->clusters;
    }

    /**
     * @return ArrayCollection
     */
    public function getEntities()
    {
        return $this->entities;
    }

    /**
     * @param Cluster $cluster
     */
    public function addCluster(Cluster $cluster)
    {
        $this->clusters->add($cluster);
    }

    /**
     * @param Entity $entity
     */
    public function addEntity(Entity $entity)
    {
        $this->entities->add($entity);
    }

    /**
     * @param EntityCollection $entities
     *
     * @return ConferenceSolver
     */
    public function setPresenters(EntityCollection $entities)
    {
        $this->entities = $entities;

        return $this;
    }

    /**
     * @param ClusterCollection $clusters
     *
     * @return ConferenceSolver
     */
    public function setClusters(ClusterCollection $clusters)
    {
        $this->clusters = $clusters;

        return $this;
    }

    /**
     * @return array
     */
    public function toArray()
    {
        return [
            'solver' => $this->solver,
            'solve_duration' => $this->solveDuration,
            'clusters' => $this->clusters->toArray(),
            'entities' => $this->entities->toArray(),
        ];
    }
}
